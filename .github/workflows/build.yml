name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

env:
  ubuntu_image: "ubuntu:22.04"

jobs:
  ubuntu-latest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        arch: [linux/amd64, linux/ppc64le]

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install dependencies
        run: |
          docker run --platform ${{ matrix.arch }} --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace ${{ env.ubuntu_image }} /bin/sh -c '
            set -e
            apt update
            apt install -y build-essential libsdl2-dev cmake libvulkan-dev vulkan-utils'

      - name: Build with SDL2 and Vulkan
        run: |
          docker run --platform ${{ matrix.arch }} --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace ${{ env.ubuntu_image }} /bin/sh -c '
            set -e
            cmake -B build -DWHISPER_SDL2=ON -DGGML_VULKAN=1
            cmake --build build --config Release -j $(nproc)'

      - name: Upload Ubuntu binaries
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-${{ matrix.arch }}-binaries
          path: build/bin/

  windows:
    runs-on: windows-latest

    strategy:
      matrix:
        build: [Release]
        arch: [Win32, x64]
        include:
          - arch: Win32
            s2arc: x86
          - arch: x64
            s2arc: x64

    steps:
      - name: Clone
        uses: actions/checkout@v4

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Install Vulkan SDK
        shell: pwsh
        run: choco install vulkan-sdk -y

      - name: Install SDL2
        run: |
          $sdlVersion = "2.28.5"
          C:/msys64/usr/bin/wget.exe -qO sdl2.zip https://github.com/libsdl-org/SDL/releases/download/release-$sdlVersion/SDL2-devel-$sdlVersion-VC.zip
          7z x sdl2.zip
          echo "SDL2_DIR=$env:GITHUB_WORKSPACE/SDL2-$sdlVersion/cmake" >> $env:GITHUB_ENV

      - name: Configure CMake
        run: >
          cmake -S . -B ./build -A ${{ matrix.arch }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build }}
          -DWHISPER_SDL2=ON
          -DGGML_VULKAN=1

      - name: Build
        run: |
          cd ./build
          msbuild ALL_BUILD.vcxproj -t:build -p:configuration=${{ matrix.build }} -p:platform=${{ matrix.arch }}

      - name: Copy Vulkan DLLs
        shell: pwsh
        run: |
          Copy-Item "C:\VulkanSDK\*\Bin\vulkan-1.dll" -Destination "build\bin\${{ matrix.build }}\"

      - name: Copy SDL2.dll
        run: copy "$env:SDL2_DIR/../lib/${{ matrix.s2arc }}/SDL2.dll" build/bin/${{ matrix.build }}

      - name: Upload Windows binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}-binaries
          path: build/bin/${{ matrix.build }}
